{"ast":null,"code":"var _jsxFileName = \"/Users/boone/Desktop/csc307project/frontend/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst myForm = {\n  padding: '80px'\n};\nconst button = {\n  backgroundColor: 'lightgray',\n  borderColor: 'white'\n};\n\nfunction Form(props) {\n  _s();\n\n  const [productData, setProduct] = useState({\n    title: '',\n    description: '',\n    location: '',\n    category: '',\n    contactInfo: ''\n  });\n  const [productImage, setProductImage] = useState({\n    image: null\n  });\n\n  function handleChange(event) {\n    let value = event.target.value;\n    let name = event.target.name;\n    setProduct(prevalue => {\n      return { ...prevalue,\n        [name]: value\n      };\n    });\n  }\n\n  function readFileAsBinary(file) {\n    var res = null;\n    new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = event => {\n        resolve(event.target.result);\n      };\n\n      reader.onerror = err => {\n        reject(err);\n      };\n\n      reader.readAsBinaryString(file);\n    }).then(function (result) {\n      res = result;\n    });\n    return res;\n  }\n\n  function handleChangePic(event) {\n    const file = event.target.files[0];\n    console.log(\"handleChangePic\");\n\n    if (file) {\n      setProductImage(async () => {\n        let result = readFileAsBinary(file);\n        console.log(result);\n        return result;\n      });\n    }\n  } // _handleReaderLoaded = (readerEvt) => {\n  //     let binStr = readerEvt.target.result\n  //     setProductImage(()=>{\n  //         return {\n  //             'image': binStr.toString('base64'),\n  //         }\n  //     })\n  // }\n\n\n  function submitForm(event) {\n    event.preventDefault(); // const formData = new FormData()\n    // formData.append('data',productData)\n    // formData.append('image', productImage)\n    // console.log(\"formData in submitForm()\")\n    // for (var [key, value] of formData.entries()) { \n    //     console.log(key, value);\n    // }\n\n    var object = {\n      \"data\": productData,\n      \"image\": productImage\n    };\n    console.log(\"submitForm\");\n    console.log(object['image']);\n    props.handleSubmit(object); //props.handleSubmit(formData)\n    // setProduct({title: '', description: '', location: '', category: '', contactInfo: ''});\n    // setProductImage({picture: null});\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: myForm,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      value: productData.title,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: \"description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      id: \"description\",\n      value: productData.description,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"location\",\n      children: \"location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"location\",\n      id: \"location\",\n      value: productData.location,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"category\",\n      children: \"category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"category\",\n      id: \"category\",\n      value: productData.category,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"contactInfo\",\n      children: \"contact info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"contactInfo\",\n      id: \"contactInfo\",\n      value: productData.contactInfo,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"picture\",\n      children: \"picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"picture\",\n      id: \"picture\",\n      accept: \".jpeg, .png, .jpg\",\n      value: productImage.picture,\n      onChange: handleChangePic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Submit\",\n      style: button,\n      onClick: submitForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"BgYPTIWaQ8nCMWGyBfzqWOJqSGM=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/boone/Desktop/csc307project/frontend/src/Form.js"],"names":["React","useState","myForm","padding","button","backgroundColor","borderColor","Form","props","productData","setProduct","title","description","location","category","contactInfo","productImage","setProductImage","image","handleChange","event","value","target","name","prevalue","readFileAsBinary","file","res","Promise","resolve","reject","reader","FileReader","onload","result","onerror","err","readAsBinaryString","then","handleChangePic","files","console","log","submitForm","preventDefault","object","handleSubmit","picture"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AADE,CAAf;AAIA,MAAMC,MAAM,GAAG;AACXC,EAAAA,eAAe,EAAE,WADN;AAEXC,EAAAA,WAAW,EAAE;AAFF,CAAf;;AAKA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAEjB,QAAM,CAACC,WAAD,EAAcC,UAAd,IAA4BT,QAAQ,CACtC;AACIU,IAAAA,KAAK,EAAE,EADX;AAEIC,IAAAA,WAAW,EAAE,EAFjB;AAGIC,IAAAA,QAAQ,EAAE,EAHd;AAIIC,IAAAA,QAAQ,EAAE,EAJd;AAKIC,IAAAA,WAAW,EAAE;AALjB,GADsC,CAA1C;AAUA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAC5C;AACIiB,IAAAA,KAAK,EAAE;AADX,GAD4C,CAAhD;;AAMA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB;AACA,QAAIE,IAAI,GAAGH,KAAK,CAACE,MAAN,CAAaC,IAAxB;AAEAb,IAAAA,UAAU,CAAEc,QAAD,IAAc;AACrB,aAAO,EACL,GAAGA,QADE;AAEL,SAACD,IAAD,GAAQF;AAFH,OAAP;AAID,KALO,CAAV;AAMH;;AAED,WAASI,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5B,QAAIC,GAAG,GAAG,IAAV;AACA,QAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7B,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,MAAAA,MAAM,CAACE,MAAP,GAAiBb,KAAD,IAAW;AACvBS,QAAAA,OAAO,CAACT,KAAK,CAACE,MAAN,CAAaY,MAAd,CAAP;AACH,OAFD;;AAIAH,MAAAA,MAAM,CAACI,OAAP,GAAkBC,GAAD,IAAS;AACtBN,QAAAA,MAAM,CAACM,GAAD,CAAN;AACH,OAFD;;AAIAL,MAAAA,MAAM,CAACM,kBAAP,CAA0BX,IAA1B;AACH,KAZD,EAYGY,IAZH,CAYQ,UAASJ,MAAT,EAAiB;AACrBP,MAAAA,GAAG,GAAGO,MAAN;AACH,KAdD;AAeA,WAAOP,GAAP;AACH;;AAED,WAASY,eAAT,CAAyBnB,KAAzB,EAAgC;AAC5B,UAAMM,IAAI,GAAGN,KAAK,CAACE,MAAN,CAAakB,KAAb,CAAmB,CAAnB,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,QAAIhB,IAAJ,EAAU;AACNT,MAAAA,eAAe,CAAC,YAAY;AACxB,YAAIiB,MAAM,GAAGT,gBAAgB,CAACC,IAAD,CAA7B;AACAe,QAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,eAAOA,MAAP;AACH,OAJc,CAAf;AAKH;AAEJ,GA7DgB,CA+DjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASS,UAAT,CAAoBvB,KAApB,EAA2B;AACvBA,IAAAA,KAAK,CAACwB,cAAN,GADuB,CAEvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,QAAIC,MAAM,GAAG;AAAC,cAAQpC,WAAT;AACC,eAASO;AADV,KAAb;AAGAyB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAM,CAAC,OAAD,CAAlB;AACArC,IAAAA,KAAK,CAACsC,YAAN,CAAmBD,MAAnB,EAjBuB,CAkBvB;AAGA;AACA;AACH;;AAED,sBACI;AAAM,IAAA,KAAK,EAAI3C,MAAf;AAAA,4BAEI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,EAAE,EAAC,OAHP;AAII,MAAA,KAAK,EAAEO,WAAW,CAACE,KAJvB;AAKI,MAAA,QAAQ,EAAEQ;AALd;AAAA;AAAA;AAAA;AAAA,YAHJ,eAUI;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,aAFT;AAGI,MAAA,EAAE,EAAC,aAHP;AAII,MAAA,KAAK,EAAEV,WAAW,CAACG,WAJvB;AAKI,MAAA,QAAQ,EAAEO;AALd;AAAA;AAAA;AAAA;AAAA,YAXJ,eAkBI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAmBI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,EAAE,EAAC,UAHP;AAII,MAAA,KAAK,EAAEV,WAAW,CAACI,QAJvB;AAKI,MAAA,QAAQ,EAAEM;AALd;AAAA;AAAA;AAAA;AAAA,YAnBJ,eA0BI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BJ,eA2BI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,EAAE,EAAC,UAHP;AAII,MAAA,KAAK,EAAEV,WAAW,CAACK,QAJvB;AAKI,MAAA,QAAQ,EAAEK;AALd;AAAA;AAAA;AAAA;AAAA,YA3BJ,eAkCI;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCJ,eAmCI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,aAFT;AAGI,MAAA,EAAE,EAAC,aAHP;AAII,MAAA,KAAK,EAAEV,WAAW,CAACM,WAJvB;AAKI,MAAA,QAAQ,EAAEI;AALd;AAAA;AAAA;AAAA;AAAA,YAnCJ,eA0CI;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1CJ,eA2CI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,EAAE,EAAC,SAHP;AAII,MAAA,MAAM,EAAC,mBAJX;AAKI,MAAA,KAAK,EAAEH,YAAY,CAAC+B,OALxB;AAMI,MAAA,QAAQ,EAAER;AANd;AAAA;AAAA;AAAA;AAAA,YA3CJ,eAmDI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,KAAK,EAAGnC,MAA5C;AAAoD,MAAA,OAAO,EAAEuC;AAA7D;AAAA;AAAA;AAAA;AAAA,YAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyDH;;GA1JQpC,I;;KAAAA,I;AA2JT,eAAeA,IAAf","sourcesContent":["\nimport React, {useState} from 'react';\n\nconst myForm = {\n    padding: '80px',\n}\n\nconst button = {\n    backgroundColor: 'lightgray',\n    borderColor: 'white',\n}\n\nfunction Form(props) { \n\n    const [productData, setProduct] = useState(\n        {  \n            title: '',\n            description: '',\n            location: '',\n            category: '',\n            contactInfo: '',\n        }\n    );\n\n    const [productImage, setProductImage] = useState(\n        {\n            image: null\n        }\n    );\n\n    function handleChange(event) {\n        let value = event.target.value\n        let name = event.target.name\n        \n        setProduct((prevalue) => {\n            return {\n              ...prevalue,             \n              [name]: value\n            }\n          })\n    }\n    \n    function readFileAsBinary(file) {\n        var res = null;\n        new Promise((resolve, reject) => {\n            const reader = new FileReader();\n    \n            reader.onload = (event) => {\n                resolve(event.target.result);\n            };\n    \n            reader.onerror = (err) => {\n                reject(err);\n            };\n\n            reader.readAsBinaryString(file);\n        }).then(function(result) {\n            res = result;\n        });\n        return res;\n    }\n\n    function handleChangePic(event) {\n        const file = event.target.files[0];\n        console.log(\"handleChangePic\")\n        if (file) {\n            setProductImage(async () => {\n                let result = readFileAsBinary(file);\n                console.log(result);\n                return result;\n            });\n        }\n        \n    }\n\n    // _handleReaderLoaded = (readerEvt) => {\n    //     let binStr = readerEvt.target.result\n    //     setProductImage(()=>{\n    //         return {\n    //             'image': binStr.toString('base64'),\n    //         }\n    //     })\n    // }\n\n    function submitForm(event) {\n        event.preventDefault()\n        // const formData = new FormData()\n        // formData.append('data',productData)\n        // formData.append('image', productImage)\n        // console.log(\"formData in submitForm()\")\n        // for (var [key, value] of formData.entries()) { \n        //     console.log(key, value);\n        // }\n      \n\n    \n        var object = {\"data\": productData, \n                      \"image\": productImage};\n\n        console.log(\"submitForm\")\n        console.log(object['image'])\n        props.handleSubmit(object)\n        //props.handleSubmit(formData)\n\n\n        // setProduct({title: '', description: '', location: '', category: '', contactInfo: ''});\n        // setProductImage({picture: null});\n    }\n      \n    return (\n        <form style = {myForm}>\n\n            <label htmlFor=\"name\">title</label>\n            <input\n                type=\"text\"\n                name=\"title\"\n                id=\"title\"\n                value={productData.title}\n                onChange={handleChange} />\n                \n            <label htmlFor=\"description\">description</label>\n            <input\n                type=\"text\"\n                name=\"description\"\n                id=\"description\"\n                value={productData.description}\n                onChange={handleChange} />\n\n            <label htmlFor=\"location\">location</label>\n            <input\n                type=\"text\"\n                name=\"location\"\n                id=\"location\"\n                value={productData.location}\n                onChange={handleChange} />\n                \n            <label htmlFor=\"category\">category</label>\n            <input\n                type=\"text\"\n                name=\"category\"\n                id=\"category\"\n                value={productData.category}\n                onChange={handleChange} />\n\n            <label htmlFor=\"contactInfo\">contact info</label>\n            <input\n                type=\"text\"\n                name=\"contactInfo\"\n                id=\"contactInfo\"\n                value={productData.contactInfo}\n                onChange={handleChange} />\n            \n            <label htmlFor=\"picture\">picture</label>\n            <input\n                type=\"file\"\n                name=\"picture\"\n                id=\"picture\"\n                accept=\".jpeg, .png, .jpg\"\n                value={productImage.picture}\n                onChange={handleChangePic} />\n\n            <input type=\"button\" value=\"Submit\" style ={button} onClick={submitForm} /> \n\n        \n        </form>\n    ); \n}\nexport default Form;\n\n"]},"metadata":{},"sourceType":"module"}